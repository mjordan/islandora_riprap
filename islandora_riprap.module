<?php

use Drupal\Component\Utility\Html;

/**
 * Implements hook_theme().
 */
function islandora_riprap_theme($existing, $type, $theme, $path) {
  return [
    'islandora_riprap_summary' => [
      'variables' => ['content' => null, 'outcome' => null, 'mid' => null],
    ],
    'islandora_riprap_report' => [
      'variables' => ['report' => null, 'mid' => null, 'binary_resource_url' => null],
    ],
  ];
}

/**
 * Default preprocessor function for the islandora_riprap_theme hook.
 */
function template_preprocess_islandora_riprap_report(&$variables) {
  $variables['attributes'] = [
    'id' => ['islandora_riprap_report'],
  ];
}

/**
 * Default preprocessor function for the islandora_riprap_theme hook.
 */
function template_preprocess_islandora_riprap_summary(&$variables) {
  $variables['attributes'] = [
    'class' => [$variables['outcome']],
  ];
}

/**
 * Implements hook_page_attachments().
 */
function islandora_riprap_page_attachments(array &$attachments) {
  $current_path = \Drupal::service('path.current')->getPath();
  $path_args = explode('/', ltrim($current_path, '/'));
  // E.g., the Manage Media View for each Islandora object.
  if (count($path_args) >= 3 && $path_args[0] == 'node' && $path_args[2] == 'media') {
    $attachments['#attached']['library'][] = 'islandora_riprap/islandora_riprap';
  }
}

/**
 * Implements hook_cron().
 */
function islandora_riprap_cron() {
  $interval = 7 * 24 * 60 * 60;
  $next_execution = \Drupal::state()->get('islandora_riprap.next_execution');
  $next_execution = !empty($next_execution) ? $next_execution : 0;
  if (REQUEST_TIME >= $next_execution) {
    $query = \Drupal::database()->select('fixity_check_event', 'f');
    $query->fields('f');
    $query->condition('f.event_outcome', 'success', '<>');
    $results = $query->execute();
    $summary = [];
    while ($record = $results->fetchAssoc()) {
      $date = new \DateTime($record['timestamp']);
      $summary[$record['resource_id']][$date->format('Y-m-d')] = ['resource' => $record['resource_id'], 'date' => $date->format('Y-m-d')];
    }
    if ($summary) {
      $mailManager = \Drupal::service('plugin.manager.mail');
      $module = 'islandora_riprap';
      $key = 'notify_failure';
      $to = \Drupal::config('islandora_riprap.settings')->get('report_email');
      $wrapper = "<html><body>";
      $intro = "$wrapper<p>The following Fedora assets have failed their fixity checks.</p>";
      $body = "<p>";
      foreach ($summary as $resource => $data) {
        foreach ($data as $datum) {
          $body .= "{$datum['resource']} failed on {$datum['date']}<br />";
        }
      }
      $outro = "</p></body></html>";
      $params['message'] = $intro . $body . $outro;
      $params['title'] = t('Fixity Failures.  Auto Email from Islandora Riprap');
      $langcode = \Drupal::currentUser()->getPreferredLangcode();
      $send = TRUE;
      $result = $mailManager->mail($module, $key, $to, $langcode, $params, 'alanjarlathstanley@gmail.com', $send);
      if ($result['result'] != TRUE) {
        $message = t('There was a problem sending your email notification to @email.', ['@email' => $to]);
        drupal_set_message($message, 'error');
        \Drupal::logger('mail-log')->error($message);
        return;
      }
    }
    \Drupal::state()->set('islandora_riprap.next_execution', REQUEST_TIME + $interval);
  }
}

/**
 * Implements hook_mail().
 */
function islandora_riprap_mail($key, &$message, $params) {
  $options = [
    'langcode' => $message['langcode'],
  ];
  $from = \Drupal::config('system.site')->get('mail');
  switch ($key) {
    case 'notify_failure':
      $message['headers'] = [
        'content-type' => 'text/html',
        'MIME-Version' => '1.0',
        'reply-to' => $from,
        'from' => 'Sent by <' . $from . '>',
      ];
      $message['from'] = $from;
      $message['subject'] = t('@title', ['@title' => $params['title']], $options);
      $message['body'][] = Html::escape($params['message']);
      break;
  }
}
